---
import Layout from '../../components/Layout.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import { db } from '../../lib/supabase';
import type { Tables } from '../../lib/supabase';

export async function getStaticPaths() {
  // Get all approved events for static generation
  const { data: events, error } = await db.events.getAll();
  
  if (error || !events) {
    console.error('Error fetching events for static paths:', error);
    return [];
  }

  return events.map((event) => ({
    params: { id: event.id },
    props: { event },
  }));
}

export interface Props {
  event: Tables<'events'>;
}

const { event } = Astro.props;

// Fetch related data
const [locationResult, organizationResult, primaryTagResult, secondaryTagResult, parentEventResult] = await Promise.all([
  event.location_id ? db.locations.getById(event.location_id) : Promise.resolve({ data: null, error: null }),
  event.organization_id ? db.organizations.getById(event.organization_id) : Promise.resolve({ data: null, error: null }),
  event.primary_tag_id ? db.tags.getById(event.primary_tag_id) : Promise.resolve({ data: null, error: null }),
  event.secondary_tag_id ? db.tags.getById(event.secondary_tag_id) : Promise.resolve({ data: null, error: null }),
  event.parent_event_id ? db.events.getById(event.parent_event_id) : Promise.resolve({ data: null, error: null })
]);

const location = locationResult.data;
const organization = organizationResult.data;
const primaryTag = primaryTagResult.data;
const secondaryTag = secondaryTagResult.data;
const parentEvent = parentEventResult.data;

// Format date and time
const formatDate = (date: string) => {
  const dateObj = new Date(date);
  const options: Intl.DateTimeFormatOptions = { 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric'
  };
  return dateObj.toLocaleDateString('en-US', options);
};

const formatTime = (time: string) => {
  return new Date(`2000-01-01T${time}`).toLocaleTimeString('en-US', {
    hour: 'numeric',
    minute: '2-digit',
    hour12: true
  });
};

// Get event image
const getEventImage = () => {
  if (event.external_image_url) {
    return event.external_image_url;
  }
  return null;
};

// Generate calendar export URLs
const generateCalendarUrls = () => {
  const startDate = new Date(event.start_date);
  const endDate = event.end_date ? new Date(event.end_date) : startDate;
  
  // Google Calendar
  const googleUrl = new URL('https://calendar.google.com/calendar/render');
  googleUrl.searchParams.set('action', 'TEMPLATE');
  googleUrl.searchParams.set('text', event.title);
  googleUrl.searchParams.set('dates', `${startDate.toISOString().replace(/[-:]/g, '').split('.')[0]}Z/${endDate.toISOString().replace(/[-:]/g, '').split('.')[0]}Z`);
  if (event.description) {
    googleUrl.searchParams.set('details', event.description);
  }
  if (location?.address) {
    googleUrl.searchParams.set('location', location.address);
  }
  
  return {
    google: googleUrl.toString(),
    outlook: `/api/calendar/outlook?eventId=${event.id}`,
    apple: `/api/calendar/ical?eventId=${event.id}`
  };
};

const calendarUrls = generateCalendarUrls();
---

<Layout 
  title={`${event.title} - Der Town`} 
  description={event.description ? event.description.substring(0, 160) + '...' : `Join us for ${event.title} in Der Town`}
>
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Breadcrumb -->
    <Breadcrumb items={[
      { label: 'Events', href: '/events' },
      { label: event.title }
    ]} />
    
    <!-- Event Header -->
    <div class="mb-8">
      <div class="flex items-start justify-between mb-4">
        <h1 class="text-4xl font-bold text-gray-900">
          {event.title}
        </h1>
        <button 
          onclick="shareEvent()"
          class="ml-4 p-2 text-gray-500 hover:text-gray-700 rounded-lg hover:bg-gray-100 transition-colors"
          aria-label="Share event"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z" />
          </svg>
        </button>
      </div>
      
      <!-- Tags -->
      {(primaryTag || secondaryTag) && (
        <div class="flex flex-wrap gap-2 mb-6">
          {primaryTag && (
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
              {primaryTag.name}
            </span>
          )}
          {secondaryTag && (
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
              {secondaryTag.name}
            </span>
          )}
        </div>
      )}

      <!-- When -->
      <div class="mb-6">
        <h2 class="text-xl font-semibold mb-2">When</h2>
        <div class="text-gray-600">
          <p>{formatDate(event.start_date)}</p>
          {event.start_time && (
            <p>{formatTime(event.start_time)}{event.end_time && ` - ${formatTime(event.end_time)}`}</p>
          )}
        </div>
      </div>

      <!-- Where -->
      {location && (
        <div class="mb-6">
          <h2 class="text-xl font-semibold mb-2">Where</h2>
          <div class="text-gray-600">
            <p>{location.name}</p>
            {location.address && <p>{location.address}</p>}
          </div>
        </div>
      )}

      <!-- Description -->
      {event.description && (
        <div class="mb-6">
          <h2 class="text-xl font-semibold mb-2">Description</h2>
          <div class="text-gray-600 whitespace-pre-wrap">
            {event.description}
          </div>
        </div>
      )}

      <!-- Additional Information -->
      {event.website && (
        <div class="mb-6">
          <h2 class="text-xl font-semibold mb-2">Additional Information</h2>
          <div class="text-gray-600">
            <p>
              Website: <a href={event.website} target="_blank" rel="noopener noreferrer" class="text-blue-600 hover:underline">
                {event.website}
              </a>
            </p>
          </div>
        </div>
      )}

      <!-- Part of Series -->
      {parentEvent && (
        <div class="mb-6">
          <h2 class="text-xl font-semibold mb-2">Part of</h2>
          <div class="text-gray-600">
            <a href={`/events/${parentEvent.id}`} class="text-blue-600 hover:underline">
              {parentEvent.title}
            </a>
          </div>
        </div>
      )}

      <!-- Add to Calendar -->
      <div class="mb-6">
        <h2 class="text-xl font-semibold mb-4">Add event to your calendar</h2>
        <div class="flex gap-4">
          <a href={calendarUrls.google} target="_blank" rel="noopener noreferrer" class="inline-flex items-center justify-center w-12 h-12 rounded-lg bg-gray-100 hover:bg-gray-200">
            <span class="sr-only">Add to Google Calendar</span>
            <svg class="w-6 h-6" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 0C5.372 0 0 5.373 0 12s5.372 12 12 12c6.627 0 12-5.373 12-12S18.627 0 12 0zm.14 19.018c-3.868 0-7-3.14-7-7.018c0-3.878 3.132-7.018 7-7.018c1.89 0 3.47.697 4.682 1.829l-1.974 1.978v-.004c-.735-.702-1.667-1.062-2.708-1.062c-2.31 0-4.187 1.956-4.187 4.273c0 2.315 1.877 4.277 4.187 4.277c2.096 0 3.522-1.202 3.816-2.852H12.14v-2.737h6.585c.088.47.135.96.135 1.474c0 4.01-2.677 6.86-6.72 6.86z"/>
            </svg>
          </a>
          <a href={calendarUrls.outlook} target="_blank" rel="noopener noreferrer" class="inline-flex items-center justify-center w-12 h-12 rounded-lg bg-gray-100 hover:bg-gray-200">
            <span class="sr-only">Add to Outlook</span>
            <svg class="w-6 h-6" viewBox="0 0 24 24" fill="currentColor">
              <path d="M7.88 12.04q0 .45-.11.87-.1.41-.33.74-.22.33-.58.52-.37.2-.87.2t-.85-.2q-.35-.21-.57-.55-.22-.33-.33-.75-.1-.42-.1-.86t.1-.87q.1-.43.34-.76.22-.34.59-.54.36-.2.87-.2t.86.2q.35.21.57.55.22.34.31.77.1.43.1.88zM24 12v9.38q0 .46-.33.8-.33.32-.8.32H7.13q-.46 0-.8-.33-.32-.33-.32-.8V18H1q-.41 0-.7-.3-.3-.29-.3-.7V7q0-.41.3-.7Q.58 6 1 6h6.5V2.55q0-.44.3-.75.3-.3.75-.3h12.9q.44 0 .75.3.3.3.3.75V10.85l1.24.72h.01q.1.07.18.18.07.12.07.25zm-6-8.25v3h3v-3zm0 4.5v3h3v-3zm0 4.5v1.83l3.05-1.83zm-5.25-9v3h3.75v-3zm0 4.5v3h3.75v-3zm0 4.5v2.03l2.41 1.5 1.34-.8v-2.73zM9 3.75V6h2l.13.01.12.04v-2.3zM5.98 15.98q.9 0 1.6-.3.7-.32 1.19-.86.48-.55.73-1.28.25-.74.25-1.61 0-.83-.25-1.55-.24-.71-.71-1.24t-1.15-.83q-.68-.3-1.55-.3-.92 0-1.64.3-.71.3-1.2.85-.5.54-.75 1.3-.25.74-.25 1.63 0 .85.26 1.56.26.72.74 1.23.48.52 1.17.81.69.3 1.56.3zM7.5 21h12.39L12 16.08V17q0 .41-.3.7-.29.3-.7.3H7.5zm15-.13v-7.24l-5.9 3.54Z"/>
            </svg>
          </a>
          <a href={calendarUrls.apple} target="_blank" rel="noopener noreferrer" class="inline-flex items-center justify-center w-12 h-12 rounded-lg bg-gray-100 hover:bg-gray-200">
            <span class="sr-only">Add to Apple Calendar</span>
            <svg class="w-6 h-6" viewBox="0 0 24 24" fill="currentColor">
              <path d="M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11"/>
            </svg>
          </a>
        </div>
      </div>

      <!-- Back to Calendar -->
      <a href="/calendar" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
        ‚Üê Back to Calendar
      </a>
    </div>
  </div>
</Layout>

<script>
  function shareEvent() {
    const title = document.title;
    const url = window.location.href;
    
    if (navigator.share) {
      // Use Web Share API if available (mobile devices)
      navigator.share({
        title: title,
        url: url
      }).catch(console.error);
    } else {
      // Fallback to clipboard copy
      navigator.clipboard.writeText(url).then(() => {
        // You might want to show a toast notification here
        alert('Link copied to clipboard!');
      }).catch(console.error);
    }
  }
</script> 