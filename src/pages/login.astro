---
import Layout from '../components/Layout.astro';
import { supabase } from '../lib/supabase';

// Check if user is already logged in
const { data: { session } } = await supabase.auth.getSession();
if (session) {
  // Get the redirect URL from query params or default to /admin
  const redirectTo = Astro.url.searchParams.get('redirect') || '/admin';
  return Astro.redirect(redirectTo);
}
---
<Layout 
  title="Login - Der Town"
  description="Login to Der Town admin panel to manage community events and announcements."
>
  <main class="min-h-screen flex items-center justify-center bg-gray-50">
    <div class="w-full max-w-md bg-white rounded-xl shadow-lg p-8">
      <h1 class="text-2xl font-bold text-center mb-6">Login</h1>
      <p class="text-sm text-gray-600 mb-6 text-center">
        Please log in with your Supabase account.<br/>
        <span class="block mt-2 text-xs text-gray-400">For development, use your local Supabase admin credentials. If you haven't created a user, do so in your Supabase dashboard or CLI.</span>
      </p>
      <form id="login-form" class="space-y-4">
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
          <input id="email" name="email" type="email" required class="mt-1 block w-full rounded border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500" />
        </div>
        <div>
          <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
          <input id="password" name="password" type="password" required class="mt-1 block w-full rounded border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500" />
        </div>
        <div id="login-error" class="text-red-600 text-sm hidden"></div>
        <button type="submit" class="w-full bg-indigo-600 text-white font-semibold py-2 rounded hover:bg-indigo-700 transition">Login</button>
      </form>
    </div>
  </main>
  
  <script>
    // Secure client-side script - no environment variables exposed
    document.getElementById('login-form')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const emailInput = document.getElementById('email') as HTMLInputElement;
      const passwordInput = document.getElementById('password') as HTMLInputElement;
      const errorBox = document.getElementById('login-error');
      if (!emailInput || !passwordInput || !errorBox) return;
      
      errorBox.classList.add('hidden');
      const email = emailInput.value;
      const password = passwordInput.value;
      
      try {
        // Use a secure API endpoint for authentication
        const response = await fetch('/api/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email, password }),
          credentials: 'include',
        });
        
        const data = await response.json();
        
        if (!response.ok) {
          throw new Error(data.error || 'Login failed.');
        }
        
        // Redirect to admin page on successful login
        const urlParams = new URLSearchParams(window.location.search);
        const redirectTo = urlParams.get('redirect') || '/admin';
        window.location.href = redirectTo;
      } catch (err) {
        let msg = 'Login failed. Please try again.';
        if (err instanceof Error) msg = err.message;
        errorBox.textContent = msg;
        errorBox.classList.remove('hidden');
        console.error('[LOGIN DEBUG] Error:', err);
      }
    });
  </script>
</Layout>
