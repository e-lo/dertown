---
import Layout from '../components/Layout.astro';
import Breadcrumb from '../components/Breadcrumb.astro';
import { db } from '../lib/supabase';
import type { Tables } from '../lib/supabase';

// Get URL parameters for pagination and filtering
const url = new URL(Astro.request.url);
const page = parseInt(url.searchParams.get('page') || '1');
const limit = 10;
const offset = (page - 1) * limit;

// Fetch published announcements
const { data: announcements, error } = await db.announcements.getPublished();

if (error) {
  console.error('Error fetching announcements:', error);
}

const announcementsList = (announcements || []).slice(offset, offset + limit);
const totalCount = announcements?.length || 0;
const totalPages = Math.ceil(totalCount / limit);
---

<Layout 
  title="Announcements - Der Town" 
  description="Stay updated with the latest announcements and news from the Der Town community."
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Breadcrumb -->
    <Breadcrumb items={[{ label: 'Announcements' }]} />
    
    <!-- Page Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-4">Announcements</h1>
      <p class="text-lg text-gray-600">
        Stay updated with the latest news, updates, and important information from the Der Town community.
      </p>
    </div>
    
    <!-- Announcements List -->
    <div class="space-y-6">
      {announcementsList.length > 0 ? (
        announcementsList.map((announcement) => (
          <article class="bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow">
            <div class="flex items-start justify-between mb-4">
              <div>
                <h2 class="text-xl font-semibold text-gray-900 mb-2">
                  {announcement.title}
                </h2>
                <div class="flex items-center text-sm text-gray-500 space-x-4">
                  <span>
                    {new Date(announcement.created_at || '').toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}
                  </span>
                  {announcement.author && (
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                      {announcement.author}
                    </span>
                  )}
                </div>
              </div>
            </div>
            
            <div class="prose prose-gray max-w-none">
              <p class="text-gray-700 leading-relaxed">
                {announcement.message}
              </p>
            </div>
            
            {announcement.link && (
              <div class="mt-4">
                <a 
                  href={announcement.link}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center text-blue-600 hover:text-blue-800 transition-colors"
                >
                  Read more
                  <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                </a>
              </div>
            )}
          </article>
        ))
      ) : (
        <div class="text-center py-12">
          <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z" />
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900">No announcements</h3>
          <p class="mt-1 text-sm text-gray-500">
            There are no announcements to display at the moment.
          </p>
        </div>
      )}
    </div>
    
    <!-- Pagination -->
    {totalPages > 1 && (
      <div class="mt-8 flex items-center justify-center">
        <nav class="flex items-center space-x-2">
          {page > 1 && (
            <a
              href={`/announcements?page=${page - 1}`}
              class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
            >
              Previous
            </a>
          )}
          
          {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNum) => (
            <a
              href={`/announcements?page=${pageNum}`}
              class={`px-3 py-2 text-sm font-medium rounded-md ${
                pageNum === page
                  ? 'bg-blue-600 text-white'
                  : 'text-gray-500 bg-white border border-gray-300 hover:bg-gray-50'
              }`}
            >
              {pageNum}
            </a>
          ))}
          
          {page < totalPages && (
            <a
              href={`/announcements?page=${page + 1}`}
              class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
            >
              Next
            </a>
          )}
        </nav>
      </div>
    )}
  </div>
</Layout> 