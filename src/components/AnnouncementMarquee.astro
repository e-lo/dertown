---
const { announcements = [] } = Astro.props;

// Filter to only show published announcements that should be visible now
const now = new Date();

type Announcement = {
  title: string;
  message: string;
  status: string;
  show_at?: string;
  expires_at?: string;
  link?: string;
};

const visibleAnnouncements = announcements.filter((announcement: Announcement) => {
  if (announcement.status !== 'published') return false;

  const showAt = announcement.show_at ? new Date(announcement.show_at) : null;
  const expiresAt = announcement.expires_at ? new Date(announcement.expires_at) : null;

  if (showAt && showAt > now) return false;
  if (expiresAt && expiresAt < now) return false;

  return true;
});
---

<div class="w-full py-6 px-0" style="background: #ffe600;">
  <div class="max-w-4xl mx-auto flex flex-col gap-4">
    {
      visibleAnnouncements.length === 0 && (
        <div class="bg-yellow-100 text-yellow-800 text-center py-4 rounded shadow mt-2">
          No announcements to display at this time.
        </div>
      )
    }
    {
      visibleAnnouncements.map((announcement: Announcement, index: number) => (
        <div
          class="bg-gray-700 text-white rounded-2xl px-6 py-4 shadow flex flex-col md:flex-row md:items-center gap-2 md:gap-6"
          data-index={index}
          style="font-size: 1.1rem;"
        >
          <div class="flex-1 min-w-0">
            <span class="font-bold text-lg md:text-xl">{announcement.title}</span>
            <span class="mx-2 hidden md:inline">|</span>
            <span class="block md:inline text-base font-normal opacity-90">
              {announcement.message}
            </span>
          </div>
          {announcement.link && (
            <div class="flex-shrink-0 mt-2 md:mt-0">
              <a
                href={announcement.link}
                target="_blank"
                rel="noopener noreferrer"
                class="text-white underline font-semibold hover:text-yellow-300 transition-all text-base md:text-lg"
              >
                Learn more
              </a>
            </div>
          )}
        </div>
      ))
    }
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('.announcement-container');
    const slides = document.querySelectorAll('.announcement-slide');
    const dots = document.querySelectorAll('.announcement-dot');
    const prevBtn = document.querySelector('.announcement-prev');
    const nextBtn = document.querySelector('.announcement-next');

    if (!container || slides.length <= 1) return;
    let currentIndex = 0;
    let interval: ReturnType<typeof setInterval> | null = null;

    const showSlide = (index: number) => {
      currentIndex = index;
      const translateX = -index * 100;
      if (container && container instanceof HTMLElement) {
        container.style.transform = `translateX(${translateX}%)`;
      }
      dots.forEach((dot, i) => {
        if (dot && 'classList' in dot) {
          dot.classList.toggle('opacity-100', i === index);
          dot.classList.toggle('opacity-50', i !== index);
        }
      });
    };

    const nextSlide = () => {
      const nextIndex = (currentIndex + 1) % slides.length;
      showSlide(nextIndex);
    };

    const prevSlide = () => {
      const prevIndex = currentIndex === 0 ? slides.length - 1 : currentIndex - 1;
      showSlide(prevIndex);
    };

    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => showSlide(index));
    });
    if (prevBtn) prevBtn.addEventListener('click', prevSlide);
    if (nextBtn) nextBtn.addEventListener('click', nextSlide);

    const startAutoRotate = () => {
      if (interval) clearInterval(interval);
      interval = setInterval(nextSlide, 5000);
    };
    const stopAutoRotate = () => {
      if (interval) {
        clearInterval(interval);
        interval = null;
      }
    };
    startAutoRotate();
    container.addEventListener('mouseenter', stopAutoRotate);
    container.addEventListener('mouseleave', startAutoRotate);
    showSlide(0);
  });
</script>
