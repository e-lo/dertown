---
import type { Tables } from '../lib/supabase';

export interface Props {
  event: Tables<'events'>;
  showImage?: boolean;
  showDescription?: boolean;
  showLocation?: boolean;
  showOrganization?: boolean;
  showTags?: boolean;
  showCost?: boolean;
  showRegistration?: boolean;
  className?: string;
}

const {
  event,
  showImage = true,
  showDescription = true,
  showLocation = true,
  showOrganization = true,
  showTags = true,
  showCost = true,
  showRegistration = true,
  className = '',
} = Astro.props;

// Format date and time
const formatDate = (date: string, time?: string | null) => {
  const dateObj = new Date(date);
  const options: Intl.DateTimeFormatOptions = { 
    month: 'short', 
    day: 'numeric',
    year: 'numeric'
  };
  
  if (time) {
    options.hour = 'numeric';
    options.minute = '2-digit';
  }
  
  return dateObj.toLocaleDateString('en-US', options);
};

const formatTime = (time: string) => {
  return new Date(`2000-01-01T${time}`).toLocaleTimeString('en-US', {
    hour: 'numeric',
    minute: '2-digit',
    hour12: true
  });
};

// Get event image
const getEventImage = () => {
  if (event.external_image_url) {
    return event.external_image_url;
  }
  // TODO: Add logic for uploaded images when storage is implemented
  return null;
};

// Get event URL
const getEventUrl = () => {
  return `/events/${event.id}`;
};

// Get background color based on primary tag
const getBackgroundColor = () => {
  if (!getEventImage()) {
    // TODO: Replace with actual tag-based color logic
    return 'bg-blue-100';
  }
  return '';
};
---

<article class={`relative rounded-2xl overflow-hidden shadow-md hover:shadow-lg transition-shadow duration-200 ${getBackgroundColor()} ${className}`}>
  {event.featured && (
    <div class="absolute top-3 left-3 z-10">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
      </svg>
    </div>
  )}
  
  {showImage && getEventImage() ? (
    <div class="aspect-[16/9] w-full overflow-hidden">
      <img 
        src={getEventImage()} 
        alt={event.title}
        class="w-full h-full object-cover"
        loading="lazy"
      />
    </div>
  ) : null}
  
  <div class="p-6">
    <div class="space-y-2">
      <h3 class="text-xl font-semibold text-gray-900 line-clamp-2">
        <a href={getEventUrl()} class="hover:text-blue-600 transition-colors">
          {event.title}
        </a>
      </h3>
      
      <div class="text-sm text-gray-600">
        <time datetime={event.start_date}>
          {formatDate(event.start_date, event.start_time)}
          {event.start_time && ` at ${formatTime(event.start_time)}`}
        </time>
      </div>
    </div>

    {showDescription && event.description && (
      <p class="mt-3 text-gray-600 text-sm line-clamp-3">
        {event.description}
      </p>
    )}

    <div class="mt-4 space-y-2">
      {showLocation && event.location_id && (
        <div class="text-sm text-gray-600">
          <span>Location TBD</span>
        </div>
      )}
      
      {showOrganization && event.organization_id && (
        <div class="text-sm text-gray-600">
          <span>Organization TBD</span>
        </div>
      )}
      
      {showCost && event.cost && (
        <div class="text-sm text-gray-600">
          <span>{event.cost}</span>
        </div>
      )}
    </div>

    {showTags && (event.primary_tag_id || event.secondary_tag_id) && (
      <div class="mt-4 flex flex-wrap gap-2">
        {event.primary_tag_id && (
          <span class="px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
            Sports
          </span>
        )}
        {event.secondary_tag_id && (
          <span class="px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
            Outdoors
          </span>
        )}
      </div>
    )}

    <div class="mt-4 flex items-center justify-between">
      <a 
        href={getEventUrl()} 
        class="text-sm font-medium text-blue-600 hover:text-blue-800 transition-colors"
      >
        Learn more
      </a>
      {showRegistration && event.registration && (
        <span class="text-sm font-medium text-gray-600">
          Registration required
        </span>
      )}
    </div>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 