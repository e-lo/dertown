-- Fix activity_type inheritance in public_kid_activities view
-- When activity_type is NULL or empty, inherit from parent activity

DROP VIEW IF EXISTS public_kid_activities;
CREATE VIEW public_kid_activities AS
SELECT 
    ka.id,
    ka.name,
    ka.description,
    ka.sponsoring_organization_id,
    ka.website,
    ka.email,
    ka.phone,
    ka.registration_opens,
    ka.registration_closes,
    ka.registration_link,
    ka.registration_info,
    ka.registration_required,
    ka.is_fall,
    ka.is_winter,
    ka.is_spring,
    ka.is_summer,
    ka.is_ongoing,
    ka.season_start_month,
    ka.season_start_year,
    ka.season_end_month,
    ka.season_end_year,
    ka.min_age,
    ka.max_age,
    ka.min_grade,
    ka.max_grade,
    ka.cost,
    ka.cost_assistance_available,
    ka.cost_assistance_details,
    ka.start_datetime,
    ka.end_datetime,
    ka.rrule,
    ka.commitment_level,
    ka.location_id,
    ka.location_details,
    ka.required_gear,
    ka.gear_assistance_available,
    ka.gear_assistance_details,
    ka.transportation_provided,
    ka.transportation_details,
    ka.transportation_assistance_available,
    ka.transportation_assistance_details,
    ka.additional_requirements,
    ka.special_needs_accommodations,
    ka.special_needs_details,
    ka.max_capacity,
    ka.waitlist_available,
    -- Inherit activity_type from parent when NULL or empty
    COALESCE(NULLIF(ka.activity_type, ''), parent.activity_type) as activity_type,
    ka.participation_type,
    ka.parent_activity_id,
    ka.activity_hierarchy_type,
    ka.status,
    ka.featured,
    ka.active,
    ka.created_at,
    ka.updated_at,
    ka.created_by,
    ka.notes,
    ka.waitlist_status
FROM kid_activities ka
LEFT JOIN kid_activities parent ON ka.parent_activity_id = parent.id
WHERE ka.active = true; 